{"version":3,"sources":["Carousel/hooks/useCarousel.ts","Carousel/styled.ts","Carousel/index.tsx","Carousel/hooks/useGestureEvents.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["useCarousel","_ref","containerRef","frames","options","_useState","useState","_useState2","Object","slicedToArray","mounted","setMounted","_useState3","_useState4","current","setCurrent","_useState5","_useState6","transitionDuration","setTransitionDuration","_useState7","_useState8","offsetX","setOffsetX","_useState9","_useState10","isProcessTransit","setisProcessTransit","useEffect","length","timerId","auto","onInterval","clearInterval","containerFrame","useMemo","isFirstPage","isLastPage","normalizeFrames","concat","toConsumableArray","containerStyle","transform","framesStyle","map","_","i","n","onTransition","direction","onTransitonStart","setTimeout","onTransitonEnd","duration","getFixedOffsetX","prevCurrent","updateCurrent","useCallback","setInterval","interval","frameSize","w","h","_window$getComputedSt","window","getComputedStyle","width","height","parseFloat","split","getFrameSize","loop","Error","decideTravelDirection","distance","normalizeDistance","Math","abs","threshold","onTouchStart","onTouchMove","onTouchEnd","onClickNav","Wrapper","styled","div","_templateObject","Container","_templateObject2","Frame","_templateObject3","Arrows","_templateObject4","Arrow","_templateObject5","props","color","ArrowPrev","_templateObject6","ArrowNext","_templateObject7","Nav","_templateObject8","NavItem","_templateObject9","active","defaultOptions","dotColor","arrowColor","Carousel","children","_options","objectSpread","useRef","_useCarousel","events","onStart","onMove","onEnd","touchStartPosition","setTouchStartPosition","touchEndPosition","setTouchEndPosition","touchActive","setTouchActive","touchStart","event","getPosition","touchMove","position","touchEnd","touches","clientX","onMouseDown","onMouseOut","onMouseUp","onMouseMove","onDragStart","preventDefault","useGestureEvents","frameContents","frame","react_default","a","createElement","key","style","handleNavToTarget","el","currentTarget","dataset","frameIndex","assign","ref","onClick","data-frame-index","GlobalStyle","createGlobalStyle","App_templateObject","reset","Title","h1","App_templateObject2","Section","App_templateObject3","Widget","App_templateObject4","WidgetInner","App_templateObject5","App_templateObject6","Boolean","location","hostname","match","ReactDOM","render","setLength","setLoop","setAuto","setDotColor","setArrowColor","_useState11","_useState12","setDuration","_useState13","_useState14","_useState15","_useState16","setThreshold","Array","App_Frame","href","src","Fragment","prev","type","onChange","target","value","alert","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.859ad1bc.chunk.js","sourcesContent":["import { RefObject, useCallback, useEffect, useMemo, useState } from 'react'\n\ninterface Props {\n  containerRef: RefObject<HTMLElement>\n  frames: JSX.Element[]\n  options: Options\n}\n\ninterface Options {\n  duration: number\n  threshold: number\n  loop: boolean\n  auto: boolean\n  interval: number\n}\n\ntype Direction = 'current' | 'prev' | 'next' | number\n\nexport default function useCarousel({ containerRef, frames, options }: Props) {\n  const [mounted, setMounted] = useState(false)\n  const [current, setCurrent] = useState(0)\n  const [transitionDuration, setTransitionDuration] = useState(0)\n  const [offsetX, setOffsetX] = useState(0)\n  const [isProcessTransit, setisProcessTransit] = useState(false)\n\n  useEffect(\n    () => {\n      !mounted && setMounted(true)\n      current > frames.length - 1 && setCurrent(frames.length - 1)\n      const timerId = options.auto && onInterval()\n      return () => {\n        timerId && clearInterval(timerId)\n      }\n    },\n    [mounted, isProcessTransit, current, options]\n  )\n\n  const containerFrame = useMemo(() => containerRef.current, [mounted])\n  const isFirstPage = useMemo(() => current === 0, [current])\n  const isLastPage = useMemo(() => current === frames.length - 1, [current, frames])\n  const normalizeFrames = useMemo(() => [frames[frames.length - 1], ...frames, frames[0]], [frames, options])\n\n  const containerStyle = useMemo(\n    () => ({\n      transform: `translateX(${offsetX}px)`,\n      transitionDuration: `${transitionDuration}ms`,\n    }),\n    [offsetX, transitionDuration]\n  )\n\n  const framesStyle = useMemo(\n    () =>\n      normalizeFrames.map((_, i) => {\n        const n = i - 1\n        if (n === current) {\n          return { transform: `translateX(${0})` }\n        } else {\n          return { transform: `translateX(${-100 * (current - n)}%)` }\n        }\n      }),\n    [current, normalizeFrames]\n  )\n\n  const onTouchStart = () => undefined\n\n  const onTouchMove = (distance: number) => {\n    if (isProcessTransit) return\n    setOffsetX(distance)\n  }\n\n  const onTouchEnd = (distance: number) => {\n    const direction = decideTravelDirection(normalizeDistance(distance))\n    onTransition(direction)\n  }\n\n  const onClickNav = (direction: Direction) => {\n    onTransition(direction)\n  }\n\n  const onTransition = (direction: Direction) => {\n    if (isProcessTransit) return\n    onTransitonStart(direction)\n    setTimeout(() => {\n      onTransitonEnd(direction)\n    }, options.duration)\n  }\n\n  const onTransitonStart = (direction: Direction) => {\n    setOffsetX(getFixedOffsetX(direction))\n    setTransitionDuration(options.duration)\n    setisProcessTransit(true)\n  }\n\n  const onTransitonEnd = (direction: Direction) => {\n    setOffsetX(0)\n    setTransitionDuration(0)\n    setisProcessTransit(false)\n    setCurrent(prevCurrent => updateCurrent(prevCurrent, direction))\n  }\n\n  const onInterval = useCallback(() => setInterval(() => onTransition('next'), options.duration + options.interval), [\n    options,\n  ])\n\n  const getFrameSize = () => {\n    if (!containerFrame) return { w: 0, h: 0 }\n    const { width, height } = window.getComputedStyle(containerFrame)\n    const w = width ? parseFloat(width.split('px')[0]) : 0\n    const h = height ? parseFloat(height.split('px')[0]) : 0\n    return { w, h }\n  }\n\n  const getFixedOffsetX = (direction: Direction) => {\n    const frameSize = getFrameSize()\n    if (typeof direction === 'number') return (direction - current) * -frameSize.w\n    switch (direction) {\n      case 'current':\n        return 0\n      case 'prev':\n        if (!options.loop && isFirstPage) return 0\n        return frameSize.w\n      case 'next':\n        if (!options.loop && isLastPage) return 0\n        return -frameSize.w\n      default:\n        throw new Error('not match direction')\n    }\n  }\n\n  const updateCurrent = (prevCurrent: number, direction: Direction) => {\n    if (typeof direction === 'number') return direction\n    switch (direction) {\n      case 'current':\n        return prevCurrent\n      case 'prev':\n        if (!options.loop && isFirstPage) return prevCurrent\n        if (options.loop && isFirstPage) return frames.length - 1\n        return prevCurrent - 1\n      case 'next':\n        if (!options.loop && isLastPage) return prevCurrent\n        if (options.loop && isLastPage) return 0\n        return prevCurrent + 1\n      default:\n        throw new Error('not match direction')\n    }\n  }\n\n  const decideTravelDirection = (distance: number) => (distance === 0 ? 'current' : distance > 0 ? 'prev' : 'next')\n  const normalizeDistance = (distance: number) => (Math.abs(distance) >= options.threshold ? distance : 0)\n\n  return {\n    current,\n    isFirstPage,\n    isLastPage,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    onClickNav,\n    containerStyle,\n    framesStyle,\n    normalizeFrames,\n  }\n}\n","import styled from 'styled-components'\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  overflow: hidden;\n`\n\nexport const Container = styled.div`\n  width: 100%;\n  height: 100%;\n`\n\nexport const Frame = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n`\n\nexport const Arrows = styled.div``\n\ninterface ArrowProps {\n  color: string\n}\n\nconst Arrow = styled.div`\n  position: absolute;\n  top: 50%;\n  transform: translateY(-50%);\n  border-style: solid;\n  border-color: ${(props: ArrowProps) => props.color};\n  border-width: 0 6px 6px 0;\n  display: inline-block;\n  padding: 6px;\n  cursor: pointer;\n`\n\nexport const ArrowPrev = styled(Arrow)`\n  left: 12px;\n  transform: rotate(135deg);\n`\n\nexport const ArrowNext = styled(Arrow)`\n  right: 12px;\n  transform: rotate(-45deg);\n`\n\nexport const Nav = styled.div`\n  position: absolute;\n  bottom: 12px;\n  width: 100%;\n  display: flex;\n  flex-wrap: wrap;\n  align-items: center;\n  justify-content: center;\n`\n\ninterface NavItemProps {\n  color: string\n  active: boolean\n}\n\nexport const NavItem = styled.div`\n  width: 12px;\n  height: 12px;\n  margin: 3px 6px;\n  border-radius: 50%;\n  background: ${(props: NavItemProps) => props.color};\n  opacity: ${(props: NavItemProps) => (props.active ? 1.0 : 0.5)};\n  cursor: pointer;\n`\n","import React, { MouseEvent, RefObject, useMemo, useRef } from 'react'\nimport useCarousel from './hooks/useCarousel'\nimport useGestureEvents from './hooks/useGestureEvents'\nimport { ArrowNext, ArrowPrev, Arrows, Container, Frame, Nav, NavItem, Wrapper } from './styled'\n\ninterface Props {\n  children: JSX.Element[]\n  options?: Options\n}\n\ninterface Options {\n  duration?: number\n  threshold?: number\n  dotColor?: string\n  arrowColor?: string\n  loop?: boolean\n  auto?: boolean\n  interval?: number\n}\n\nconst defaultOptions = {\n  duration: 500,\n  threshold: 100,\n  dotColor: '#000',\n  arrowColor: '#000',\n  loop: true,\n  auto: true,\n  interval: 2000,\n}\n\nexport default function Carousel({ children: frames, options }: Props) {\n  const _options = { ...defaultOptions, ...options }\n  const containerRef: RefObject<HTMLDivElement> = useRef(null)\n  const {\n    current,\n    containerStyle,\n    framesStyle,\n    isFirstPage,\n    isLastPage,\n    onTouchStart,\n    onTouchMove,\n    onTouchEnd,\n    onClickNav,\n    normalizeFrames,\n  } = useCarousel({\n    frames,\n    containerRef,\n    options: _options,\n  })\n  const events = useGestureEvents({ onStart: onTouchStart, onMove: onTouchMove, onEnd: onTouchEnd })\n\n  const frameContents = useMemo(\n    () =>\n      normalizeFrames\n        .map((frame, i) => {\n          const n = i - 1\n          if (n === current) {\n            return frame\n          } else if (n < current) {\n            return !_options.loop && isFirstPage ? null : frame\n          } else if (n > current) {\n            return !_options.loop && isLastPage ? null : frame\n          }\n        })\n        .map((frame, i) => (\n          <Frame key={i} style={framesStyle[i]}>\n            {frame}\n          </Frame>\n        )),\n    [current, normalizeFrames]\n  )\n\n  const handleNavToPrev = () => {\n    onClickNav('prev')\n  }\n  const handleNavToNext = () => {\n    onClickNav('next')\n  }\n  const handleNavToTarget = (event: MouseEvent<HTMLDivElement>) => {\n    const el = event.currentTarget\n    el.dataset.frameIndex && onClickNav(+el.dataset.frameIndex)\n  }\n\n  return (\n    <Wrapper>\n      <Container style={containerStyle} ref={containerRef} {...events}>\n        {frameContents}\n      </Container>\n      <Arrows>\n        {(_options.loop || !isFirstPage) && <ArrowPrev color={_options.arrowColor} onClick={handleNavToPrev} />}\n        {(_options.loop || !isLastPage) && <ArrowNext color={_options.arrowColor} onClick={handleNavToNext} />}\n      </Arrows>\n      <Nav>\n        {frames.map((_, i) => (\n          <NavItem\n            active={current === i}\n            color={_options.dotColor}\n            key={i}\n            data-frame-index={i}\n            onClick={handleNavToTarget}\n          />\n        ))}\n      </Nav>\n    </Wrapper>\n  )\n}\n","import { DragEvent, MouseEvent, TouchEvent, useState } from 'react'\n\ninterface Props {\n  onStart?: () => void\n  onMove?: (distance: number) => void\n  onEnd?: (distance: number) => void\n}\n\nexport default function useGestureEvents({ onStart, onMove, onEnd }: Props) {\n  const [touchStartPosition, setTouchStartPosition] = useState(0)\n  const [touchEndPosition, setTouchEndPosition] = useState(0)\n  const [touchActive, setTouchActive] = useState(false)\n\n  const touchStart = (event: TouchEvent | MouseEvent) => {\n    setTouchActive(true)\n    setTouchStartPosition(getPosition(event))\n    setTouchEndPosition(getPosition(event))\n    onStart && onStart()\n  }\n\n  const touchMove = (event: TouchEvent | MouseEvent) => {\n    if (!touchActive) return\n    const position = getPosition(event)\n    setTouchEndPosition(position)\n    onMove && onMove(position - touchStartPosition)\n  }\n\n  const touchEnd = (event: TouchEvent | MouseEvent) => {\n    if (!touchActive) return\n    onEnd && onEnd(touchEndPosition - touchStartPosition)\n    setTouchStartPosition(0)\n    setTouchActive(false)\n  }\n\n  const dragstart = (event: DragEvent) => {\n    event.preventDefault()\n  }\n\n  const getPosition = (event: TouchEvent | MouseEvent) =>\n    'touches' in event ? event.touches[0].clientX : event.clientX\n\n  return {\n    onMouseDown: touchStart,\n    onTouchStart: touchStart,\n    onMouseOut: touchEnd,\n    onTouchEnd: touchEnd,\n    onMouseUp: touchEnd,\n    onMouseMove: touchMove,\n    onTouchMove: touchMove,\n    onDragStart: dragstart,\n  }\n}\n","import React, { ChangeEvent, useMemo, useState } from 'react'\nimport styled, { createGlobalStyle } from 'styled-components'\nimport reset from 'styled-reset'\nimport Carousel from './Carousel'\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n`\n\nconst Title = styled.h1`\n  font-size: 18px;\n  font-weight: bold;\n  text-align: center;\n  line-height: 1.5;\n  padding: 24px 0;\n  > span {\n    font-size: 36px;\n  }\n`\n\nconst Section = styled.div`\n  width: 95%;\n  height: 300px;\n  margin: 0 auto;\n`\n\nconst Widget = styled.div`\n  margin-top: 24px;\n  padding: 12px 0;\n  background: #ddd;\n`\n\nconst WidgetInner = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-wrap: wrap;\n  margin: 12px 0;\n  > * {\n    margin: 3px 6px;\n    font-size: 12px;\n  }\n  label {\n    font-weight: bold;\n  }\n`\n\nconst Frame = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  background-color: #000;\n  overflow: hidden;\n  a {\n    height: 100%;\n  }\n  img {\n    width: auto;\n    height: 100%;\n  }\n`\n\nexport default function App() {\n  const [length, setLength] = useState(5)\n  const [loop, setLoop] = useState(false)\n  const [auto, setAuto] = useState(false)\n  const [dotColor, setDotColor] = useState('#ffffff')\n  const [arrowColor, setArrowColor] = useState('#ffffff')\n  const [duration, setDuration] = useState(500)\n  const [interval, setInterval] = useState(2000)\n  const [threshold, setThreshold] = useState(100)\n\n  const handleLoop = () => setLoop((prev: boolean) => !prev)\n  const handleAuto = () => setAuto((prev: boolean) => !prev)\n  const handleDotColor = (event: ChangeEvent<HTMLInputElement>) => setDotColor(event.target.value)\n  const handleArrowColor = (event: ChangeEvent<HTMLInputElement>) => setArrowColor(event.target.value)\n  const handleDuration = (event: ChangeEvent<HTMLInputElement>) => setDuration(+event.target.value)\n  const handleInterval = (event: ChangeEvent<HTMLInputElement>) => setInterval(+event.target.value)\n  const handleThreshold = (event: ChangeEvent<HTMLInputElement>) => setThreshold(+event.target.value)\n  const handleLength = (event: ChangeEvent<HTMLInputElement>) => {\n    const val = +event.target.value\n    if (val > 10) {\n      alert('Max length is 10!')\n      return\n    }\n    setLength(+event.target.value)\n  }\n\n  const frames = useMemo(\n    () =>\n      [...Array(length)].map((_: any, i: number) => (\n        <Frame key={i}>\n          <a href={`#${i}`}>\n            <img src={`https://picsum.photos/800/200/?${i}`} />\n          </a>\n        </Frame>\n      )),\n    [length]\n  )\n\n  return (\n    <>\n      <GlobalStyle />\n      <Title>\n        <span>Carousel</span>\n        <br />\n        with React Hooks\n      </Title>\n      <Section>\n        <Carousel options={{ arrowColor, auto, dotColor, duration, interval, loop, threshold }}>{frames}</Carousel>\n      </Section>\n      <Widget>\n        <WidgetInner>\n          <button onClick={handleLoop}>{`${loop ? 'disable' : 'enable'} to \"Loop\"`}</button>\n          <button onClick={handleAuto}>{`${auto ? 'disable' : 'enable'} to \"Auto\"`}</button>\n        </WidgetInner>\n        <WidgetInner>\n          <label>\n            Dot Color: <input type=\"color\" onChange={handleDotColor} value={dotColor} />\n          </label>\n          <label>\n            Arrow Color: <input type=\"color\" onChange={handleArrowColor} value={arrowColor} />\n          </label>\n        </WidgetInner>\n        <WidgetInner>\n          <label>\n            Duration(ms): <input type=\"number\" onChange={handleDuration} value={duration} />\n          </label>\n          <label>\n            Interval(ms): <input type=\"number\" onChange={handleInterval} value={interval} />\n          </label>\n          <label>\n            Threshold(px): <input type=\"number\" onChange={handleThreshold} value={threshold} />\n          </label>\n        </WidgetInner>\n        <WidgetInner>\n          <label>\n            Frame Length: <input type=\"number\" onChange={handleLength} value={length} />\n          </label>\n        </WidgetInner>\n      </Widget>\n    </>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ninterface Config {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL((process as { env: { [key: string]: string } }).env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker === null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (response.status === 404 || (contentType !== null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.')\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}